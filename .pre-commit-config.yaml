# Pre-commit hooks for Sentinel Desktop Security Suite
# Install: pip install pre-commit && pre-commit install
# Run manually: pre-commit run --all-files

default_language_version:
  python: python3.11

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.3.0
    hooks:
      - id: black
        name: Black (Python formatter)
        language_version: python3
        args: [--line-length=120]

  # Import sorting
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (Import sorter)
        args: [--profile=black, --line-length=120]

  # Python linting (Ruff - fast alternative to flake8)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.4
    hooks:
      - id: ruff
        name: Ruff (Python linter)
        args: [--fix, --exit-non-zero-on-fix]

  # Type checking (MyPy)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        name: MyPy (Type checker)
        additional_dependencies:
          - PySide6-stubs
          - types-psutil
        args:
          - --ignore-missing-imports
          - --no-strict-optional
          - app

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
      - id: end-of-file-fixer
        name: Fix end of files
      - id: check-yaml
        name: Check YAML syntax
      - id: check-json
        name: Check JSON syntax
      - id: check-toml
        name: Check TOML syntax
      - id: check-added-large-files
        name: Check for large files
        args: [--maxkb=1000]
      - id: mixed-line-ending
        name: Fix line endings
        args: [--fix=lf]

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.8
    hooks:
      - id: bandit
        name: Bandit (Security linter)
        args: [-r, app, -ll, -i]
        exclude: ^app/tests/

# Optional: QML linting (requires Qt tools installed)
# Uncomment if qmllint is available in your environment
# - repo: local
#   hooks:
#     - id: qmllint
#       name: QML Linting
#       entry: qmllint
#       language: system
#       files: \.qml$
#       pass_filenames: true
